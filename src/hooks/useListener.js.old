import { useRef, useEffect } from 'react';

const useListener = (currentTarget, eventType, handler) => {
	const previousTarget = useRef(currentTarget.current);

	useEffect(() => {
		const cur = currentTarget.current;
		const prev = previousTarget.current;

		if (!cur) return;

		if (prev) {
			prev.removeEventListener(eventType, handler);
		}

		cur.addEventListener(eventType, handler);
		previousTarget.current = cur;

		return () => cur.removeEventListener(eventType, handler);
	}, [ currentTarget.current ]);
};

export default useListener;